<style lang="less" src="../static/index.less"></style>
<template lang="wxml">
  <!-- 首页 -->
  <view class="container">
    <!-- 搜索框 -->
    <view class="header-bar">
      <view class="weui-flex">
        <view class="logo weui-flex__item">
          <image src="../images/index/logo.png" mode="aspectFit"/>
        </view>
        <view class="searchbar weui-flex__item">
          <view class="weui-search-bar">
            <view class="weui-search-bar__form">
                <view class="weui-search-bar__box">
                    <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
                    <input type="text" class="weui-search-bar__input" placeholder="搜索"/>
                </view>
                <label class="weui-search-bar__label" bindtap="inputTyping">
                    <icon class="weui-icon-search" type="search" size="14"></icon>
                    <view class="weui-search-bar__text">搜索</view>
                </label>
            </view>
          </view>
        </view>
        <view class="watcher weui-flex__item">
          <image src="../images/index/watcher.png"/>
        </view>
      </view>
    </view>
    <!-- 幻灯片 -->
    <carousel :images = "images"></carousel>
    <iconGrid :iconInfo = "iconInfo"></iconGrid>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import carousel from '../components/carousel'
  import iconGrid from '../components/iconGrid'
  import testMixin from '../mixins/test'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'Candice小商城'
    }
    components = {
      carousel: carousel,
      iconGrid: iconGrid
    }

    mixins = [testMixin]

    data = {
      images: [
        {
          picurl: '../images/index/carousel1.jpg',
          targeturl: ''
        },
        {
          picurl: '../images/index/carousel2.png',
          targeturl: ''
        }
      ],
      realTimeData: [
        {
          content: '实时搜索1'
        },
        {
          content: '实时搜索2'
        },
        {
          content: '实时搜索3'
        }
      ],
      iconInfo: [
        {
          imagelUrl: '../images/iconGrid/0.png',
          tip: '看视频'
        },
        {
          imagelUrl: '../images/iconGrid/1.png',
          tip: '看视频1'
        },
        {
          imagelUrl: '../images/iconGrid/2.png',
          tip: '看视频2'
        },
        {
          imagelUrl: '../images/iconGrid/3.png',
          tip: '看视频3'
        },
        {
          imagelUrl: '../images/iconGrid/4.png',
          tip: '看视频4'
        },
        {
          imagelUrl: '../images/iconGrid/5.png',
          tip: '看视频5'
        },
        {
          imagelUrl: '../images/iconGrid/6.png',
          tip: '看视频6'
        },
        {
          imagelUrl: '../images/iconGrid/7.png',
          tip: '看视频7'
        },
        {
          imagelUrl: '../images/iconGrid/8.png',
          tip: '看视频8'
        }
      ]
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      inputTyping () {
        this.$navigate('searchPage')
      },
      plus () {
        this.mynum++
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      counterEmit (...args) {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    onLoad() {
    }
  }
</script>
